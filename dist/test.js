// Generated by Haxe 4.0.0-preview.4+1e3e5e016
(function ($global) { "use strict";
var $hxEnums = {};
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var Test = function() { };
Test.__name__ = true;
Test.main = function() {
	var header = function(title) {
		return new scout_html_TemplateResult(new scout_html_TemplateFactory_$533(),[title]);
	};
	var input = function(todos,initialValue,handleClick) {
		return new scout_html_TemplateResult(new scout_html_TemplateFactory_$607(),[header("Test"),initialValue,handleClick,todos]);
	};
	scout_html_Renderer.render(input([new todo_model_Todo("0","stuff",true),new todo_model_Todo("1","other stuff",false)],"foo",function(e) {
		var value = window.document.getElementById("target");
		Test.showFoo(value.value);
		return;
	}),window.document.getElementById("root"));
};
Test.showFoo = function(value) {
	scout_html_Renderer.render(new scout_html_TemplateResult(new scout_html_TemplateFactory_$846(),[value]),window.document.getElementById("display"));
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,__class__: haxe_ds_ObjectMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if((o instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g11 = 0;
			var _g3 = l;
			while(_g11 < _g3) {
				var i1 = _g11++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var scout_element_ScoutElement = function(__proxy,renderRoot) {
	this.__proxy = __proxy;
	this.renderRoot = renderRoot;
};
scout_element_ScoutElement.__name__ = true;
scout_element_ScoutElement.prototype = {
	remove: function() {
		this.__proxy.remove();
	}
	,getAttribute: function(name) {
		return this.__proxy.getAttribute(name);
	}
	,setAttribute: function(name,value) {
		this.__proxy.setAttribute(name,value);
	}
	,querySelector: function(sel) {
		return this.__proxy.querySelector(sel);
	}
	,querySelectorAll: function(sel) {
		return this.__proxy.querySelectorAll(sel);
	}
	,connectedCallback: function() {
		this.initilaize();
	}
	,initilaize: function() {
		this.gatherAttributes();
		this.update();
	}
	,gatherAttributes: function() {
	}
	,shouldRender: function() {
		return true;
	}
	,update: function() {
		if(!this.shouldRender()) {
			return;
		}
		var result = this.render();
		if(result != null) {
			scout_html_Api.render(result,this.renderRoot);
		}
	}
	,render: function() {
		return null;
	}
	,__class__: scout_element_ScoutElement
};
var scout_html_Api = function() { };
scout_html_Api.__name__ = true;
scout_html_Api.render = function(result,container) {
	scout_html_Renderer.render(result,container);
	return;
};
var scout_html_Dom = function() { };
scout_html_Dom.__name__ = true;
scout_html_Dom.removeNodes = function(container,startNode,endNode) {
	var node = startNode;
	while(node != endNode) {
		var n = node.nextSibling;
		if(n == null) {
			return;
		}
		container.removeChild(n);
		node = n;
	}
};
scout_html_Dom.createMarker = function() {
	return window.document.createComment("");
};
var scout_html_Part = function() { };
scout_html_Part.__name__ = true;
scout_html_Part.prototype = {
	__class__: scout_html_Part
};
var scout_html_Renderer = function() { };
scout_html_Renderer.__name__ = true;
scout_html_Renderer.render = function(result,container) {
	var part = scout_html_Renderer.parts.h[container.__id__];
	if(part == null) {
		scout_html_Dom.removeNodes(container,container.firstChild);
		part = new scout_html_part_NodePart();
		scout_html_Renderer.parts.set(container,part);
		part.appendInto(container);
	}
	part.set_value(result);
	part.commit();
};
var scout_html_Template = function(id,el,parts) {
	this.id = id;
	this.el = el;
	this.parts = parts;
};
scout_html_Template.__name__ = true;
scout_html_Template.prototype = {
	update: function(values) {
		var _g1 = 0;
		var _g = this.parts.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(i > values.length) {
				break;
			}
			this.parts[i].set_value(values[i]);
		}
		var _g2 = 0;
		var _g11 = this.parts;
		while(_g2 < _g11.length) {
			var part = _g11[_g2];
			++_g2;
			part.commit();
		}
	}
	,__class__: scout_html_Template
};
var scout_html_TemplateFactory = function() {
	this.id = "";
};
scout_html_TemplateFactory.__name__ = true;
scout_html_TemplateFactory.prototype = {
	__class__: scout_html_TemplateFactory
};
var scout_html_TemplateFactory_$290 = function() {
	this.id = "TemplateFactory_290";
};
scout_html_TemplateFactory_$290.__name__ = true;
scout_html_TemplateFactory_$290.__interfaces__ = [scout_html_TemplateFactory];
scout_html_TemplateFactory_$290.prototype = {
	get: function() {
		var __parts = [];
		var __e = window.document.createDocumentFragment();
		var __e1 = window.document.createElement("todo-item");
		var __com = new scout_html_part_PropertyCommitter(__e1,"todo",["",""]);
		var _g = 0;
		var _g1 = __com.parts;
		while(_g < _g1.length) {
			var __p = _g1[_g];
			++_g;
			__parts.push(__p);
		}
		__e.appendChild(__e1);
		var __t = new scout_html_Template(this.id,__e,__parts);
		return __t;
	}
	,__class__: scout_html_TemplateFactory_$290
};
var scout_html_TemplateFactory_$533 = function() {
	this.id = "TemplateFactory_533";
};
scout_html_TemplateFactory_$533.__name__ = true;
scout_html_TemplateFactory_$533.__interfaces__ = [scout_html_TemplateFactory];
scout_html_TemplateFactory_$533.prototype = {
	get: function() {
		var __parts = [];
		var __e = window.document.createDocumentFragment();
		var __n = window.document.createTextNode("\r\n      ");
		__e.appendChild(__n);
		var __e1 = window.document.createElement("header");
		var __n1 = window.document.createTextNode("\r\n        ");
		__e1.appendChild(__n1);
		var __e2 = window.document.createElement("h3");
		var __n2 = window.document.createTextNode("");
		__e2.appendChild(__n2);
		var __nc = scout_html_Dom.createMarker();
		__e2.appendChild(__nc);
		__e2.appendChild(scout_html_Dom.createMarker());
		var __p = new scout_html_part_NodePart();
		__parts.push(__p);
		__p.insertAfterNode(__nc);
		var __n3 = window.document.createTextNode("");
		__e2.appendChild(__n3);
		__e1.appendChild(__e2);
		var __n4 = window.document.createTextNode("\r\n      ");
		__e1.appendChild(__n4);
		__e.appendChild(__e1);
		var __n5 = window.document.createTextNode("\r\n    ");
		__e.appendChild(__n5);
		var __t = new scout_html_Template(this.id,__e,__parts);
		return __t;
	}
	,__class__: scout_html_TemplateFactory_$533
};
var scout_html_TemplateFactory_$597 = function() {
	this.id = "TemplateFactory_597";
};
scout_html_TemplateFactory_$597.__name__ = true;
scout_html_TemplateFactory_$597.__interfaces__ = [scout_html_TemplateFactory];
scout_html_TemplateFactory_$597.prototype = {
	get: function() {
		var __parts = [];
		var __e = window.document.createDocumentFragment();
		var __n = window.document.createTextNode("\r\n    ");
		__e.appendChild(__n);
		var __e1 = window.document.createElement("li");
		__e1.setAttribute("class","todo-item");
		var __com = new scout_html_part_AttributeCommitter(__e1,"id",["Todo-",""]);
		var _g = 0;
		var _g1 = __com.parts;
		while(_g < _g1.length) {
			var __p = _g1[_g];
			++_g;
			__parts.push(__p);
		}
		var __n1 = window.document.createTextNode("\r\n      ");
		__e1.appendChild(__n1);
		var __e2 = window.document.createElement("input");
		var __com1 = new scout_html_part_AttributeCommitter(__e2,"value",["",""]);
		var _g2 = 0;
		var _g11 = __com1.parts;
		while(_g2 < _g11.length) {
			var __p1 = _g11[_g2];
			++_g2;
			__parts.push(__p1);
		}
		__e2.setAttribute("class","edit");
		__e2.setAttribute("type","text");
		__e1.appendChild(__e2);
		var __n2 = window.document.createTextNode("\r\n      ");
		__e1.appendChild(__n2);
		var __e3 = window.document.createElement("div");
		__e3.setAttribute("class","view");
		var __n3 = window.document.createTextNode("\r\n        ");
		__e3.appendChild(__n3);
		var __e4 = window.document.createElement("input");
		var __ev = new scout_html_part_EventPart(__e4,"change");
		__parts.push(__ev);
		__e4.setAttribute("class","toggle");
		__e4.setAttribute("type","checkbox");
		var __b = new scout_html_part_BoolAttributePart(__e4,"checked",["",""]);
		__parts.push(__b);
		__e3.appendChild(__e4);
		var __n4 = window.document.createTextNode("\r\n        ");
		__e3.appendChild(__n4);
		var __e5 = window.document.createElement("label");
		var __n5 = window.document.createTextNode("");
		__e5.appendChild(__n5);
		var __nc = scout_html_Dom.createMarker();
		__e5.appendChild(__nc);
		__e5.appendChild(scout_html_Dom.createMarker());
		var __p2 = new scout_html_part_NodePart();
		__parts.push(__p2);
		__p2.insertAfterNode(__nc);
		var __n6 = window.document.createTextNode("");
		__e5.appendChild(__n6);
		__e3.appendChild(__e5);
		var __n7 = window.document.createTextNode("\r\n        ");
		__e3.appendChild(__n7);
		var __e6 = window.document.createElement("button");
		var __ev1 = new scout_html_part_EventPart(__e6,"click");
		__parts.push(__ev1);
		__e6.setAttribute("class","destroy");
		var __n8 = window.document.createTextNode("");
		__e6.appendChild(__n8);
		__e3.appendChild(__e6);
		var __n9 = window.document.createTextNode("\r\n      ");
		__e3.appendChild(__n9);
		__e1.appendChild(__e3);
		var __n10 = window.document.createTextNode("\r\n    ");
		__e1.appendChild(__n10);
		__e.appendChild(__e1);
		var __n11 = window.document.createTextNode("\r\n  ");
		__e.appendChild(__n11);
		var __t = new scout_html_Template(this.id,__e,__parts);
		return __t;
	}
	,__class__: scout_html_TemplateFactory_$597
};
var scout_html_TemplateFactory_$607 = function() {
	this.id = "TemplateFactory_607";
};
scout_html_TemplateFactory_$607.__name__ = true;
scout_html_TemplateFactory_$607.__interfaces__ = [scout_html_TemplateFactory];
scout_html_TemplateFactory_$607.prototype = {
	get: function() {
		var __parts = [];
		var __e = window.document.createDocumentFragment();
		var __n = window.document.createTextNode("\r\n      ");
		__e.appendChild(__n);
		var __nc = scout_html_Dom.createMarker();
		__e.appendChild(__nc);
		__e.appendChild(scout_html_Dom.createMarker());
		var __p = new scout_html_part_NodePart();
		__parts.push(__p);
		__p.insertAfterNode(__nc);
		var __n1 = window.document.createTextNode("\r\n      ");
		__e.appendChild(__n1);
		var __e1 = window.document.createElement("div");
		__e1.setAttribute("id","display");
		var __n2 = window.document.createTextNode("");
		__e1.appendChild(__n2);
		__e.appendChild(__e1);
		var __n3 = window.document.createTextNode("\r\n      ");
		__e.appendChild(__n3);
		var __e2 = window.document.createElement("input");
		var __com = new scout_html_part_AttributeCommitter(__e2,"value",["",""]);
		var _g = 0;
		var _g1 = __com.parts;
		while(_g < _g1.length) {
			var __p1 = _g1[_g];
			++_g;
			__parts.push(__p1);
		}
		__e2.setAttribute("class","test");
		__e2.setAttribute("id","target");
		__e2.setAttribute("name","foo");
		__e.appendChild(__e2);
		var __n4 = window.document.createTextNode("\r\n      ");
		__e.appendChild(__n4);
		var __e3 = window.document.createElement("button");
		var __ev = new scout_html_part_EventPart(__e3,"click");
		__parts.push(__ev);
		var __n5 = window.document.createTextNode("Change");
		__e3.appendChild(__n5);
		__e.appendChild(__e3);
		var __n6 = window.document.createTextNode("\r\n      ");
		__e.appendChild(__n6);
		var __e4 = window.document.createElement("todo-list");
		var __com1 = new scout_html_part_PropertyCommitter(__e4,"todos",["",""]);
		var _g2 = 0;
		var _g11 = __com1.parts;
		while(_g2 < _g11.length) {
			var __p2 = _g11[_g2];
			++_g2;
			__parts.push(__p2);
		}
		var __n7 = window.document.createTextNode("");
		__e4.appendChild(__n7);
		__e.appendChild(__e4);
		var __n8 = window.document.createTextNode("\r\n    ");
		__e.appendChild(__n8);
		var __t = new scout_html_Template(this.id,__e,__parts);
		return __t;
	}
	,__class__: scout_html_TemplateFactory_$607
};
var scout_html_TemplateFactory_$846 = function() {
	this.id = "TemplateFactory_846";
};
scout_html_TemplateFactory_$846.__name__ = true;
scout_html_TemplateFactory_$846.__interfaces__ = [scout_html_TemplateFactory];
scout_html_TemplateFactory_$846.prototype = {
	get: function() {
		var __parts = [];
		var __e = window.document.createDocumentFragment();
		var __e1 = window.document.createElement("p");
		var __n = window.document.createTextNode("");
		__e1.appendChild(__n);
		var __nc = scout_html_Dom.createMarker();
		__e1.appendChild(__nc);
		__e1.appendChild(scout_html_Dom.createMarker());
		var __p = new scout_html_part_NodePart();
		__parts.push(__p);
		__p.insertAfterNode(__nc);
		var __n1 = window.document.createTextNode("");
		__e1.appendChild(__n1);
		__e.appendChild(__e1);
		var __t = new scout_html_Template(this.id,__e,__parts);
		return __t;
	}
	,__class__: scout_html_TemplateFactory_$846
};
var scout_html_TemplateFactory_$932 = function() {
	this.id = "TemplateFactory_932";
};
scout_html_TemplateFactory_$932.__name__ = true;
scout_html_TemplateFactory_$932.__interfaces__ = [scout_html_TemplateFactory];
scout_html_TemplateFactory_$932.prototype = {
	get: function() {
		var __parts = [];
		var __e = window.document.createDocumentFragment();
		var __n = window.document.createTextNode("\r\n    ");
		__e.appendChild(__n);
		var __e1 = window.document.createElement("ul");
		__e1.setAttribute("class","todo-list");
		var __n1 = window.document.createTextNode("\r\n      ");
		__e1.appendChild(__n1);
		var __nc = scout_html_Dom.createMarker();
		__e1.appendChild(__nc);
		__e1.appendChild(scout_html_Dom.createMarker());
		var __p = new scout_html_part_NodePart();
		__parts.push(__p);
		__p.insertAfterNode(__nc);
		var __n2 = window.document.createTextNode("\r\n    ");
		__e1.appendChild(__n2);
		__e.appendChild(__e1);
		var __n3 = window.document.createTextNode("\r\n  ");
		__e.appendChild(__n3);
		var __t = new scout_html_Template(this.id,__e,__parts);
		return __t;
	}
	,__class__: scout_html_TemplateFactory_$932
};
var scout_html_TemplateResult = function(factory,values) {
	this.factory = factory;
	this.values = values;
};
scout_html_TemplateResult.__name__ = true;
scout_html_TemplateResult.prototype = {
	__class__: scout_html_TemplateResult
};
var scout_html_part_AttributeCommitter = function(element,name,strings) {
	this.dirty = true;
	this.parts = [];
	this.element = element;
	this.name = name;
	this.strings = strings;
	var len = strings.length - 1;
	var _g1 = 0;
	var _g = len;
	while(_g1 < _g) {
		var i = _g1++;
		this.parts[i] = this.createPart();
	}
};
scout_html_part_AttributeCommitter.__name__ = true;
scout_html_part_AttributeCommitter.prototype = {
	commit: function() {
		if(this.dirty) {
			this.dirty = false;
			this.element.setAttribute(this.name,this.prepare());
		}
	}
	,createPart: function() {
		return new scout_html_part_AttributePart(this);
	}
	,prepare: function() {
		var text = "";
		var end = this.strings.length - 1;
		var _g1 = 0;
		var _g = end;
		while(_g1 < _g) {
			var i = _g1++;
			var str = this.strings[i];
			text += str;
			var part = this.parts[i];
			if(part != null) {
				var value = part.get_value();
				if(value != null && ((value instanceof Array) && value.__enum__ == null)) {
					var iter = value;
					var _g2 = 0;
					while(_g2 < iter.length) {
						var t = iter[_g2];
						++_g2;
						text += Std.string(t);
					}
				} else {
					text += value;
				}
			}
		}
		return text + this.strings[end];
	}
	,__class__: scout_html_part_AttributeCommitter
};
var scout_html_part_AttributePart = function(committer) {
	this.committer = committer;
};
scout_html_part_AttributePart.__name__ = true;
scout_html_part_AttributePart.__interfaces__ = [scout_html_Part];
scout_html_part_AttributePart.prototype = {
	set_value: function(value) {
		if(value != null && value != this.get_value()) {
			this.value = value;
			this.committer.dirty = true;
		}
		return value;
	}
	,get_value: function() {
		return this.value;
	}
	,commit: function() {
		this.committer.commit();
	}
	,__class__: scout_html_part_AttributePart
};
var scout_html_part_BoolAttributePart = function(element,name,strings) {
	this.element = element;
	this.name = name;
	this.strings = strings;
};
scout_html_part_BoolAttributePart.__name__ = true;
scout_html_part_BoolAttributePart.__interfaces__ = [scout_html_Part];
scout_html_part_BoolAttributePart.prototype = {
	set_value: function(value) {
		this.pendingValue = value;
		return value;
	}
	,get_value: function() {
		return this.currentValue;
	}
	,commit: function() {
		if(this.pendingValue == null) {
			return;
		}
		var value = !(!this.pendingValue);
		if(this.currentValue != value) {
			if(value) {
				this.element.setAttribute(this.name,"");
			} else {
				this.element.removeAttribute(this.name);
			}
		}
		this.currentValue = value;
		this.pendingValue = null;
	}
	,__class__: scout_html_part_BoolAttributePart
};
var scout_html_part_EventPart = function(element,event) {
	var _gthis = this;
	this.element = element;
	this.event = event;
	this.boundEvent = function(e) {
		_gthis.handleEvent(e);
		return;
	};
};
scout_html_part_EventPart.__name__ = true;
scout_html_part_EventPart.__interfaces__ = [scout_html_Part];
scout_html_part_EventPart.prototype = {
	set_value: function(value) {
		this.pendingValue = value;
		return value;
	}
	,get_value: function() {
		return this.currentValue;
	}
	,commit: function() {
		if(this.pendingValue == null) {
			return;
		}
		this.currentValue = this.pendingValue;
		this.element.removeEventListener(this.event,this.boundEvent);
		this.element.addEventListener(this.event,this.boundEvent);
		this.pendingValue = null;
	}
	,handleEvent: function(e) {
		if(this.get_value() == null) {
			return;
		}
		var ev = this.get_value();
		ev(e);
	}
	,__class__: scout_html_part_EventPart
};
var scout_html_part_NodePart = function() {
};
scout_html_part_NodePart.__name__ = true;
scout_html_part_NodePart.__interfaces__ = [scout_html_Part];
scout_html_part_NodePart.prototype = {
	set_value: function(v) {
		this.pendingValue = v;
		return v;
	}
	,get_value: function() {
		return this.currentValue;
	}
	,insertAfterNode: function(ref) {
		this.startNode = ref;
		this.endNode = ref.nextSibling;
	}
	,appendInto: function(container) {
		this.startNode = container.appendChild(scout_html_Dom.createMarker());
		this.endNode = container.appendChild(scout_html_Dom.createMarker());
	}
	,appendIntoPart: function(part) {
		part.insert(this.startNode = scout_html_Dom.createMarker());
		part.insert(this.endNode = scout_html_Dom.createMarker());
	}
	,insertAfterPart: function(ref) {
		ref.insert(this.startNode = scout_html_Dom.createMarker());
		this.endNode = ref.endNode;
		ref.endNode = this.startNode;
	}
	,insert: function(node) {
		if(this.endNode.parentNode != null) {
			this.endNode.parentNode.insertBefore(node,this.endNode);
		}
	}
	,commit: function() {
		var value = this.pendingValue;
		var o = value;
		var _g = o == null ? null : js_Boot.getClass(o);
		switch(_g) {
		case Array:
			this.commitIterable(value);
			break;
		case Node:
			this.commitNode(value);
			break;
		case scout_html_TemplateResult:
			this.commitTemplateResult(value);
			break;
		default:
			if(value != this.currentValue) {
				this.commitText(value);
			}
		}
	}
	,commitIterable: function(value) {
		if(!((this.currentValue instanceof Array) && this.currentValue.__enum__ == null)) {
			this.currentValue = [];
			this.clear();
		}
		var itemParts = this.currentValue;
		var partIndex = 0;
		var itemPart = null;
		var _g = 0;
		while(_g < value.length) {
			var item = value[_g];
			++_g;
			itemPart = itemParts[partIndex];
			if(itemPart == null) {
				itemPart = new scout_html_part_NodePart();
				itemParts.push(itemPart);
				if(partIndex == 0) {
					itemPart.appendIntoPart(this);
				} else {
					itemPart.insertAfterPart(itemParts[partIndex - 1]);
				}
			}
			itemPart.set_value(item);
			itemPart.commit();
			++partIndex;
		}
		if(partIndex < itemParts.length) {
			itemParts = itemParts.splice(0,partIndex);
			this.clear(itemPart != null ? itemPart.endNode : null);
		}
	}
	,commitTemplateResult: function(value) {
		var factory = value.factory;
		var value1 = this.currentValue;
		var _g = (value1 instanceof scout_html_Template) ? value1 : null;
		var instance = _g;
		if(instance != null && instance.id == factory.id) {
			this.currentValue.update(value.values);
		} else {
			var template = value.factory.get();
			var fragment = template.el;
			template.update(value.values);
			this.commitNode(fragment);
			this.currentValue = template;
		}
	}
	,commitNode: function(value) {
		if(this.get_value() == value) {
			return;
		}
		this.clear();
		this.insert(value);
		this.currentValue = value;
	}
	,commitText: function(value) {
		var node = this.startNode.nextSibling;
		value = value == null ? "" : value;
		if(node == this.endNode.previousSibling && node.nodeType == 3) {
			node.textContent = value;
		} else {
			this.commitNode(window.document.createTextNode(value));
		}
		this.currentValue = value;
	}
	,clear: function(startNode) {
		if(startNode == null) {
			startNode = this.startNode;
		}
		scout_html_Dom.removeNodes(startNode.parentNode,startNode.nextSibling,this.endNode);
	}
	,__class__: scout_html_part_NodePart
};
var scout_html_part_PropertyCommitter = function(element,name,strings) {
	scout_html_part_AttributeCommitter.call(this,element,name,strings);
	this.single = strings.length == 2 && strings[0] == "" && strings[1] == "";
};
scout_html_part_PropertyCommitter.__name__ = true;
scout_html_part_PropertyCommitter.__super__ = scout_html_part_AttributeCommitter;
scout_html_part_PropertyCommitter.prototype = $extend(scout_html_part_AttributeCommitter.prototype,{
	createPart: function() {
		return new scout_html_part_PropertyPart(this);
	}
	,prepare: function() {
		if(this.single) {
			return this.parts[0].get_value();
		}
		return scout_html_part_AttributeCommitter.prototype.prepare.call(this);
	}
	,commit: function() {
		if(this.dirty) {
			this.dirty = false;
			var obj = this.element;
			obj[this.name] = this.prepare();
		}
	}
	,__class__: scout_html_part_PropertyCommitter
});
var scout_html_part_PropertyPart = function(committer) {
	scout_html_part_AttributePart.call(this,committer);
};
scout_html_part_PropertyPart.__name__ = true;
scout_html_part_PropertyPart.__super__ = scout_html_part_AttributePart;
scout_html_part_PropertyPart.prototype = $extend(scout_html_part_AttributePart.prototype,{
	__class__: scout_html_part_PropertyPart
});
var todo_model_Todo = function(id,content,completed) {
	this.id = id;
	this.content = content;
	this.completed = completed;
};
todo_model_Todo.__name__ = true;
todo_model_Todo.prototype = {
	__class__: todo_model_Todo
};
var todo_view_TodoItem = function(__proxy,renderRoot) {
	scout_element_ScoutElement.call(this,__proxy,renderRoot);
};
todo_view_TodoItem.__name__ = true;
todo_view_TodoItem.__super__ = scout_element_ScoutElement;
todo_view_TodoItem.prototype = $extend(scout_element_ScoutElement.prototype,{
	removeItem: function() {
		this.remove();
	}
	,edit: function(e) {
		e.preventDefault();
	}
	,shouldRender: function() {
		return this.get_todo() != null;
	}
	,render: function() {
		var _gthis = this;
		return new scout_html_TemplateResult(new scout_html_TemplateFactory_$597(),[this.get_todo().id,this.get_todo().content,function(_) {
			_gthis.get_todo().completed = !_gthis.get_todo().completed;
			_gthis.update();
			return;
		},this.get_todo().completed,this.get_todo().content,function(_1) {
			_gthis.removeItem();
			return;
		}]);
	}
	,get_todo: function() {
		return this.todo;
	}
	,set_todo: function(value) {
		this.todo = value;
		this.update();
		return this.get_todo();
	}
	,gatherAttributes: function() {
	}
	,__class__: todo_view_TodoItem
});
var todo_view_TodoList = function(__proxy,renderRoot) {
	scout_element_ScoutElement.call(this,__proxy,renderRoot);
};
todo_view_TodoList.__name__ = true;
todo_view_TodoList.__super__ = scout_element_ScoutElement;
todo_view_TodoList.prototype = $extend(scout_element_ScoutElement.prototype,{
	render: function() {
		var tmp = new scout_html_TemplateFactory_$932();
		var _g = [];
		var _g1 = 0;
		var _g2 = this.get_todos();
		while(_g1 < _g2.length) {
			var todo1 = _g2[_g1];
			++_g1;
			_g.push(new scout_html_TemplateResult(new scout_html_TemplateFactory_$290(),[todo1]));
		}
		return new scout_html_TemplateResult(tmp,[_g]);
	}
	,get_todos: function() {
		return this.todos;
	}
	,set_todos: function(value) {
		this.todos = value;
		this.update();
		return this.get_todos();
	}
	,gatherAttributes: function() {
	}
	,__class__: todo_view_TodoList
});
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
haxe_ds_ObjectMap.count = 0;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
(() => {
  class __Proxy195 extends HTMLElement {
    constructor() {
      super();
      this.renderRoot = this.attachShadow({ mode: "open" });
      this.__v = new todo_view_TodoItem(this, this.renderRoot);
    }
    connectedCallback() {
      this.__v.connectedCallback();
    }
    set todo(value) { this.__v.todo = value; }
  }
  customElements.define("todo-item", __Proxy195, {});
})();
(() => {
  class __Proxy194 extends HTMLElement {
    constructor() {
      super();
      this.renderRoot = this.attachShadow({ mode: "open" });
      this.__v = new todo_view_TodoList(this, this.renderRoot);
    }
    connectedCallback() {
      this.__v.connectedCallback();
    }
    set todos(value) { this.__v.todos = value; }
  }
  customElements.define("todo-list", __Proxy194, {});
})();
js_Boot.__toStr = ({ }).toString;
scout_html_Renderer.parts = new haxe_ds_ObjectMap();
Test.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
